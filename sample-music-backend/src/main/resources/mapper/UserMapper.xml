<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sample.music.mapper.UserMapper">
    <!-- 用户注册 -->
    <insert id="registerUser" parameterType="com.sample.music.pojo.entity.User">
        <!-- 使用NOW()函数获取当前的时间戳 -->
        INSERT INTO
        user(email, username, password, likes, create_time, update_time)
        VALUES (#{email}, #{username}, #{password}, #{likes}, NOW(), NOW())
        <!-- @SelectKey注解配置 -->
        <selectKey keyProperty="id" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!-- 假设user表的自增ID列名为id -->
    <insert id="addUserRole">
        INSERT INTO user_role(role_id, user_id)
        VALUES (#{roleId}, #{userId}) <!-- 这里使用#{userId}来引用上面获取的ID -->
    </insert>

    <!-- 用户修改个人信息 -->
    <update id="updateUser">
        UPDATE user
        SET nickname=#{user.nickname},
            email=#{user.email},
            phone=#{user.phone},
            avatar=#{user.avatar},
            update_time=NOW()
        WHERE id = #{userId}
    </update>

    <!-- 用户注销 -->
    <update id="cancelUser">
        UPDATE user
        SET deleted = 1,
            status  = 2
        WHERE id = #{userId}
    </update>

    <!-- 改变用户状态 -->
    <update id="changeStatus">
        UPDATE user
        SET
            status = #{status}
        WHERE id = #{userId}
    </update>

    <!-- 用户修改密码 -->
    <update id="updatePwd">
        UPDATE user
        SET
            password=#{newPassword},
            update_time=NOW()
        WHERE email=#{email}
    </update>

    <!-- 用户增加经验 -->
    <update id="updateUserExp">
        UPDATE user
        SET
            exp=#{exp}
        WHERE id=#{userId}
    </update>

    <!-- 用户名搜索用户 -->
    <select id="findUserByUserName" resultType="com.sample.music.pojo.entity.User">
        select * from user where deleted = 0 AND username = #{username}
    </select>

    <!-- 邮箱搜索用户 -->
    <select id="findUserByEmail" resultType="com.sample.music.pojo.entity.User">
        select * from user where deleted = 0 AND email = #{email}
    </select>

    <!-- id搜索用户 -->
    <select id="findUserById" resultType="com.sample.music.pojo.dto.UserDTO">
        select * from user where deleted = 0 AND id = #{id}
    </select>

    <!-- 查询用户经验值 -->
    <select id="selectUserExp" resultType="java.lang.Integer">
        select exp from user where id = #{userId}
    </select>

    <!-- 查询用户权限id -->
    <select id="findUserRole" resultType="long">
        select role_id from user_role where user_id = #{userId}
    </select>

    <!-- 查询权限名称 -->
    <select id="findRoleName" resultType="string">
        select role_name from role where id = #{roleId}
    </select>
</mapper>